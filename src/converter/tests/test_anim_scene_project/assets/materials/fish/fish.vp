uniform float u_time;
uniform float u_amplitude;
uniform float u_frequency;
varying vec2 vUv;

void main() {
	vUv = uv;
	float strength = 1. - smoothstep(0.3, 1., vUv.x) ;

	float amplitude = u_amplitude * strength;
	float phaseOffset = mod(position.x + position.y, 1.0);

	float offsetY = sin(u_time * u_frequency + phaseOffset * 2.0) * amplitude ;

	vec3 newPosition = position;
	//newPosition.x += sin(u_time * 1.3 + position.y * 5.0) * 0.5;
	newPosition.y +=  offsetY;

	gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);
}
